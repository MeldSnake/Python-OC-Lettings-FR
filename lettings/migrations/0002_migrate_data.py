# Generated by Django 3.0 on 2023-05-13 19:09

from django.db import migrations
from django.apps.registry import Apps


letting_map_props = {
    "title": "title",
}
address_map_props = {
    "number": "number",
    "street": "street",
    "city": "city",
    "state": "state",
    "zip_code": "zip_code",
    "country_iso_code": "country_iso_code",
}


def MigrateData(apps: Apps, schema_editor):
    """Migration des anciennces donnée depuis les anciennes table de oc_lettings_site vers lettings"""
    old_letting_t = apps.get_model("oc_lettings_site", "Letting")
    old_address_t = apps.get_model("oc_lettings_site", "Address")
    new_letting_t = apps.get_model("lettings", "Letting")
    new_address_t = apps.get_model("lettings", "Address")

    # Re-Creation de toutes les anciennes addressses dans la nouvelle table.
    for address in old_address_t.objects.all():
        # Obtention des valeures de l'ancienne addresse.
        props = {k: getattr(address, v) for k, v in address_map_props.items()}
        # Creation de la nouvelle addresse. (Si l'addresse n'existe pas dans la table).
        _ = new_address_t.objects.get_or_create(**props)
    # Re-Creation de toutes les anciens lettings dans la nouvelle table.
    for letting in old_letting_t.objects.all():
        # Obtention des valeures de l'ancien letting.
        props = {k: getattr(letting, v) for k, v in letting_map_props.items()}
        # Creation/Obtention de la nouvelle addresse afin de garder une relation entre les deux elements.
        old_address = letting.address
        addr_props = {k: getattr(old_address, v) for k, v in address_map_props.items()}
        props['address'] = new_address_t.objects.get(**addr_props)
        # Creation du nouveau letting a partir des anciennces données et de l'addresse obtenu ci-dessus.
        _ = new_letting_t.objects.get_or_create(**props)


def UnMigrateData(apps: Apps, schema_editor):
    """Inversement de la migration @see MigrateData"""
    new_letting_t = apps.get_model("oc_lettings_site", "Letting")
    new_address_t = apps.get_model("oc_lettings_site", "Address")
    old_letting_t = apps.get_model("lettings", "Letting")
    old_address_t = apps.get_model("lettings", "Address")

    # Re-Creation de toutes les anciennes addressses dans la nouvelle table.
    for address in old_address_t.objects.all():
        # Obtention des valeures de l'ancienne addresse.
        props = {k: getattr(address, v) for k, v in address_map_props.items()}
        # Creation de la nouvelle addresse. (Si l'addresse n'existe pas dans la table).
        _ = new_address_t.objects.get_or_create(**props)
    # Re-Creation de toutes les anciens lettings dans la nouvelle table.
    for letting in old_letting_t.objects.all():
        # Obtention des valeures de l'ancien letting.
        props = {k: getattr(letting, v) for k, v in letting_map_props.items()}
        # Creation/Obtention de la nouvelle addresse afin de garder une relation entre les deux elements.
        old_address = letting.address
        addr_props = {k: getattr(address, v) for k, v in address_map_props.items()}
        props['address'], _ = new_address_t.objects.get(**props)
        # Creation du nouveau letting a partir des anciennces données et de l'addresse obtenu ci-dessus.
        _ = new_letting_t.objects.get_or_create(**props)


class Migration(migrations.Migration):
    dependencies = [
        ("lettings", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(MigrateData, UnMigrateData),
    ]
